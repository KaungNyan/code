package com.global.code.service

import org.springframework.stereotype.Service

@Service
class generalService {

    /*
    It's a function that takes two numbers as arguments and returns their sum
    */
    fun addTwoNumbers (num1: Int, num2: Int): Int {
        /*
        As I don't create a variable "sum" to accept the result of adding two numbers, it can reduce memory usage
        and I don't create that variable because it's not needed in anywhere other than in "return" statement
        */
        return num1 + num2;
    }

    /*
    It's a function that takes a list of strings as input
    and returns the number of occurrences of the word "hello" in the list
    */
    fun countHellos(list: List<String>): Int {
        /*
        It's generated by OpenAI(ChatGPT)
        */
//      return list.count { it == "hello" };

        /*
        Here is my logic
        I don't use val here because val can't change it's value like "final" in Java
        and "count" needs to be increased whenever there's a "hello" in the list
        */
        var count: Int = 0;

        /*
        To get all the values in the List
        */
        for (x in list) {
            /*
            To check each value is "hello" or not
            */
            if(x == "hello"){
                count++;
            }
        }

        return count;
    }

    /*
    It's a function that takes a list of integers as input
    and returns a new list containing only the even numbers from the original list
    */
    fun listOfEvenNumbers(list: List<Int>): List<Int> {
        /*
        In this one, I studied "List"(enough to write this function) to try myself without the help from ChatGPT
        */
//      var evenNumbers: MutableList<Int> = mutableListOf();

        /*
        This is 1st attempt.
        To get all the values in the List
        */
//      for(x in list){
        /*
        To check each value is divisible by 2(even) or not
        */
//          if(x % 2 == 0){
//              evenNumbers.add(x);
//          }
//      }

        /*
        This is 2nd attempt after realizing there might be a method "filter" as Javascript
        reference link : https://www.educba.com/kotlin-filter/
        test in w3schools

        We can use "val" here if I want to use a variable to accept the return List from "filter" method
        because I think it only assigns value once as a List with "filter" method

        Now that I found this method, "countHellos" can be rewritten in one line as
        return list.filter { it == "hello" }.size;
        */
        return list.filter { it % 2 == 0 };
    }

    /*
    It's a function that takes a string as input and returns a new string with all the vowels removed
    */
    fun stringWithNoVowels(str: String): String {
        var noVowels: String = "";

        /*
        To get all the characters in the String
        We can use like "for(c in str)" but I don't want to use the same thing for every problem
        and luckily I found the usage of "forEach" so I used forEach instead
        reference link : https://www.codevscolor.com/kotlin-find-vowels-string
        */
        str.forEach{c ->
            /*
            I use "toLowerCase()" because "c" can be a Capitalized letter
            and it's not smart to add all the Capitalized letter of vowels in condition
             */
            noVowels += when(c.toLowerCase()) {
                'a', 'e', 'i', 'o', 'u' -> "";
                else -> c;
            };
        }

        return noVowels;
    }

    fun area(width: Double, height: Double): Double {
        /*
        The same as adding two numbers
        */
        return width * height;
    }
}